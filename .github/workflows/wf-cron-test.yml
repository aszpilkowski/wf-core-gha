name: WF Cron Test Reusable Workflow

on: workflow_dispatch

jobs: 
  wf_core_main:
    permissions: write-all
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          path: "develop"
          ref: main
        
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/main/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Build with Maven
        run: mvn clean install --file ${{ github.workspace }}/develop/pom.xml
      
      - name: Create reports directory
        run: mkdir -p reports/main

      - name: Dependency check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: dependency-check-wf-core-main
        with:
          project: 'wf-core-gha_develop'
          path: '.'
          format: 'ALL'
          out: 'reports/develop'
          args: >
            --enableRetired
            --nvdApiKey ${{ secrets.NVD_API_KEY }}
            -s "develop/**"
      - name: Upload dependency check results
        uses: actions/upload-artifact@master
        with:
          name: dependency-check-report-main
          path: 'reports/develop'

  wf_core_26:
    permissions: write-all
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          path: "wf_26"
          ref: main
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/wf_26/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Build with Maven
        run: mvn clean install --file ${{ github.workspace }}/wf_26/pom.xml

      - name: Create reports directory
        run: mkdir -p reports/wf-26
      
      - name: Dependency check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: dependency-check-wf-core-26
        with:
          project: 'wf-core-gha_26'
          path: '.'
          format: 'ALL'
          out: 'reports/wf_26'
          args: >
            --enableRetired
            --nvdApiKey ${{ secrets.NVD_API_KEY }}
            -s "wf_26/**"
      - name: Upload dependency check results
        uses: actions/upload-artifact@master
        with:
          name: dependency-check-report-26
          path: 'reports/wf_26'
    
  wf_core_31:
    permissions: write-all
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          path: "wf_31"
          ref: main
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/wf_31/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Build with Maven
        run: mvn clean install --file ${{ github.workspace }}/wf_31/pom.xml

      - name: Create reports directory
        run: mkdir -p reports/wf_31
        
      - name: Dependency check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: dependency-check-wf-core-31
        with:
          project: 'wf-core-gha_31'
          path: '.'
          format: 'ALL'
          out: 'reports/wf_31'
          args: >
            --enableRetired
            --nvdApiKey ${{ secrets.NVD_API_KEY }}
            -s "wf_31/**"
      - name: Upload dependency check results
        uses: actions/upload-artifact@master
        with:
          name: dependency-check-report-31
          path: 'reports/wf_31'

  upload_maven_cache:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [ wf_core_main, wf_core_26, wf_core_31 ]
    steps:
      - name: Echo PWD
        run: pwd
      - name: Upload Maven dependencies cache
        uses: actions/upload-artifact@v4
        with:
          name: maven-cache-develop
          path: '~/.m2/repository/**'

  run_wf_workflow:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [ upload_maven_cache ]
    steps:
      - name: Trigger Workflow in Another Repository
        run: |
          # Set the required variables
          repo_owner="aszpilkowski"
          repo_name="wf-gha"
          event_type="wf-core-owasp-trigger"
          
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.TRIGGER_KEY }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"run_id\": \"${{ github.run_id }}\", \"service\": \"wf-gha\", \"version\": \"1.0-SNAPSHOT-PSI\", \"unit\": false, \"integration\": true}}"
  
